# Definition for a binary tree node.
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right


def buildTree( inorder: list[int], postorder: list[int]) ->TreeNode:
        if inorder == []:
            return None
        root_val = postorder[-1]
        root = TreeNode(root_val)
        
        left_inorder = []
        left_postorder = []
        right_inorder = []
        right_postorder = []

        # find root_val in inorder 
        pos = inorder.index(root_val)
        left_inorder = inorder[0:pos]
        right_inorder = inorder[pos+1::]

        left_postorder = postorder[0:len(left_inorder)]
        right_postorder = postorder[len(left_postorder):-1]

        root.left = buildTree(left_inorder,left_postorder)
        root.right = buildTree(right_inorder,right_postorder)
        return root





    

inorder = [9,3,15,20,7]
postorder =[9,15,7,20,3]
tree = buildTree(inorder, postorder) 
